{"version":3,"sources":["./src/app/components/landing/landing.component.ts","./src/app/components/landing/landing.component.html","./src/app/layout/main/menu/menu.component.ts","./src/app/layout/main/menu/menu.component.html","./src/app/layout/main/footer/footer.component.ts","./src/app/layout/main/footer/footer.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/services/security.service.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/const.service.ts","./src/app/services/data.service.ts","./src/app/layout/clean/clean.component.ts","./src/app/layout/clean/clean.component.html","./src/app/services/security.guard.ts","./src/app/models/address.model.ts","./src/app/app.component.ts","./src/app/models/user.model.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/layout/main/main.component.ts","./src/app/layout/main/main.component.html","./src/app/services/token.interceptor.ts","./src/app/models/board.model.ts","./src/app/layout/main/header/header.component.ts","./src/app/layout/main/header/header.component.html","./src/app/components/board/board.component.ts","./src/app/components/board/board.component.html","./src/app/models/base.model.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"height: 150px;\">\n    <div class=\"container mt-3 \">\n        <div class=\"row justify-content-end\">\n            <div class=\"col-auto\">\n                <a href=\"#\" class=\"text-light\">Acerca de</a> \n            </div>\n            <div class=\"col-auto\">\n                <a href=\"#\" class=\"text-light\">Contacto</a> \n            </div>\n        </div>\n    </div>\n\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-2\">\n                <img src=\"../../../assets/icons/gem-v2.png\" alt=\"Vectorized image\" class=\"logo-img\">\n            </div>\n            <div class=\"col-3 my-auto ml-5\"><h1 class=\"\">Task<span class=\"text-purple\">Gems</span></h1></div>\n        </div>\n    </div>\n    <img src=\"../../../assets/img/landing.jpg\" alt=\"Vectorized image\" class=\"pre-img\">\n    <section>\n        <h1>Organiza las tareas de tu equipo eficientemente</h1>\n        <p>No pierdas tiempo y comienza a trabajar</p>\n        <button type=\"button\" class=\"btn btn-outline-light btn-lg mr-2\" [routerLink]=\"['/signup']\">Registrate</button>\n        <button type=\"button\" class=\"btn btn-primary btn-lg\" [routerLink]=\"['/login']\">Iniciar Sesión</button>\n    </section>\n    <svg viewBox=\"0 0 500 150\" preserveAspectRatio=\"none\" style=\"height: 100%; width: 100%;\">\n        <path d=\"M-8.17,139.63 C424.09,150.48 147.01,4.45 499.72,18.25 L500.00,0.00 L0.00,0.00 Z\" \n        style=\"stroke: none; fill: rgb(22, 22, 22);\">\n        </path>\n    </svg>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Board } from 'src/app/models/board.model';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(\n    private data: DataService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onCreateBoard() {\n    this.data.insertOne('/boards', {\n      _project_name: 'test',\n      _project_start_date: new Date(),\n      _project_request_date: new Date(),\n      _description: 'Descripcion de prueba',\n      _scrum_master: 'ninguno',\n      _product_owner: 'ninguno'\n    }).subscribe(d => {\n      console.log(d);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" \n      aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"#\" [routerLink]=\"['/home']\">Home\n            <span class=\"sr-only\">(current)</span>\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\" [routerLink]=\"['/home']\">About</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"javascript:void(0)\" (click)=\"onCreateBoard()\">Nuevo<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i></a>\n        </li>\n      </ul>\n    </div>\n  </nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer class=\"footer footer-transparent\">\n    <div class=\"container-xl\">\n        <div class=\"row\">\n            <div class=\"col-12 col-lg-auto mt-3 mt-lg-0\">\n                © 2020\n                <a class=\"link-secondary\">TaskGems team</a> \n                <i class=\"fab fa-black-tie\"></i>\n            </div>\n        </div>\n    </div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SecurityService } from '../../services/security.service';\nimport { MessageService } from 'primeng/api';\nimport { User } from '../../models/user.model';\nimport { abilitiesList } from '../../services/const.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User = new User();\n  \n  abilities: any = abilitiesList;\n  selectedAbilities: any;\n  passwordConfirm: String;\n\n  isValidating: Boolean = false;\n  maxDate: Date;\n  es: any; /* for spanish calendar */\n  yearRange: string;\n\n  constructor(\n    private securityService: SecurityService,\n    private router: Router,\n    private toast: MessageService\n  ) { }\n\n  ngOnInit(): void {\n    this.initCalendar();\n  }\n\n  onRegister(): void {\n    this.user.abilities = this.selectedAbilities;\n    if (this.user.password !== this.passwordConfirm) {\n      this.toast.add({ severity: 'warn', summary: 'Registro inválido', detail: 'Las contraseñas no coinciden. Intentalo de nuevo' });\n    } else {\n      this.securityService.signup(this.user).subscribe(() => {\n        this.router.navigate(['/login']);\n      }, (error) => {\n        this.toast.add({ severity: 'error', summary: 'Error', detail: error.error.message });\n      });\n    }\n  }\n\n  initCalendar() {\n    this.maxDate = new Date();\n    let year = this.maxDate.getFullYear();\n    let day = this.maxDate.getDate();\n    let month = this.maxDate.getMonth()+1;\n    this.yearRange = `${year}-${month}-${day}`;\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row min-vh-100\">\n        <div class=\"col-6 black-column\">\n            <div class=\"row mx-auto h-100\">\n                <div class=\"d-flex my-auto mx-auto \">\n                    <img src=\"../../../assets/icons/gem-v2.png\" alt=\"Vectorized image\" class=\"logo-img\">\n                </div>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"row mx-auto\">\n                <div class=\"col-8 mx-auto\">\n                    <h1><span class=\"text-primary\">Regístrate</span></h1>\n                    <div>\n                        <p class=\"text-muted\">Ingresa tus datos para crear tu cuenta de TaskGems</p>\n                    </div>\n                    <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onRegister()\" novalidate>\n                        \n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"name\">Correo Electronico</label>\n                            <input type=\"email\" name=\"name\" class=\"form-control\" required email placeholder=\"Ej. adapt@gmail.com\"\n                                #e=\"ngModel\" [(ngModel)]=\"user.email\" [ngClass]=\"{ 'is-invalid': f.submitted && e.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && e.invalid\">\n                                <div *ngIf=\"e.errors.required\">Requerido</div>\n                                <div *ngIf=\"e.errors.email\">Debe ser un correo válido</div>\n                            </div>\n                            <small id=\"emailHelp\" class=\"form-text text-muted\">No compartas tu cuenta con nadie mas.</small>\n                        </div>\n    \n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"fName\">Nombre(s)</label>\n                            <input type=\"text\" name=\"fName\" class=\"form-control\" required placeholder=\"Ej. Elon\"\n                                #fName=\"ngModel\" [(ngModel)]=\"user.firstName\" [ngClass]=\"{ 'is-invalid': f.submitted && fName.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && fName.invalid\">\n                                <div *ngIf=\"fName.errors.required\">Requerido</div> \n                            </div>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"lName\">Apellido(s)</label>\n                            <input type=\"text\" name=\"lName\" class=\"form-control\" required placeholder=\"Ej. Musk\"\n                                #lName=\"ngModel\" [(ngModel)]=\"user.lastName\" [ngClass]=\"{ 'is-invalid': f.submitted && lName.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && lName.invalid\">\n                                <div *ngIf=\"lName.errors.required\">Requerido</div> \n                            </div>\n                        </div>\n    \n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"birth\" class=\"\">Fecha de nacimiento</label>\n                            <input type=\"date\" class=\"form-control\" name=\"birth\" #birth=\"ngModel\" [(ngModel)]=\"user.birthday\" min=\"1945-01-01\" [max]=\"yearRange\"\n                                required [ngClass]=\"{ 'is-invalid': f.submitted && birth.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && birth.invalid\">\n                                <div *ngIf=\"birth.errors.required\">\n                                    Fecha requerida\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"userCurp\">Curp</label>\n                            <input type=\"text\" name=\"userCurp\" class=\"form-control\" required placeholder=\"Ej. GOJU99...\"\n                                #userCurp=\"ngModel\" [(ngModel)]=\"user.curp\" [ngClass]=\"{ 'is-invalid': f.submitted && userCurp.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && userCurp.invalid\">\n                                <div *ngIf=\"userCurp.errors.required\">Requerido</div> \n                            </div>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"userRFC\">RFC</label>\n                            <input type=\"text\" name=\"userRFC\" class=\"form-control\" required placeholder=\"Ej. GOJU99...\"\n                                #userRFC=\"ngModel\" [(ngModel)]=\"user.rfc\" [ngClass]=\"{ 'is-invalid': f.submitted && userRFC.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && userRFC.invalid\">\n                                <div *ngIf=\"userRFC.errors.required\">Requerido</div> \n                            </div>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"userAddress\">Calle</label>\n                            <input type=\"text\" name=\"userAddress\" class=\"form-control\" required placeholder=\"Ej. Calle Vicente Guerrero\"\n                                #userAddress=\"ngModel\" [(ngModel)]=\"user.address.street\" [ngClass]=\"{ 'is-invalid': f.submitted && userAddress.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && userAddress.invalid\">\n                                <div *ngIf=\"userAddress.errors.required\">Requerido</div> \n                            </div>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"userAddressNum\">Numero</label>\n                            <input type=\"text\" name=\"userAddressNum\" class=\"form-control\" required placeholder=\"Ej. 1670\"\n                                #userAddressNum=\"ngModel\" [(ngModel)]=\"user.address.number\" [ngClass]=\"{ 'is-invalid': f.submitted && userAddressNum.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && userAddressNum.invalid\">\n                                <div *ngIf=\"userAddressNum.errors.required\">Requerido</div> \n                            </div>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"userAbilities\">Habilidades</label>\n                            <div class=\"row\">\n                                <div class=\"col-12\">\n                                    <p-multiSelect style=\"width:130px;\" #userAbilities=\"ngModel\" [options]=\"abilities\" [(ngModel)]=\"selectedAbilities\" optionLabel=\"language\"\n                                        name=\"userAbilities\" filterBy=\"language\" required [ngClass]=\"{ 'is-invalid': f.submitted && userAbilities.invalid }\" \n                                        optionValue=\"value\">\n                                    </p-multiSelect>\n                                    <div class=\"invalid-feedback\" *ngIf=\"f.submitted && userAbilities.invalid\">\n                                        <div *ngIf=\"userAbilities.errors.required\">Requerido</div> \n                                    </div>\n                                </div>\n                            </div>                      \n                        </div>\n    \n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"password\">Contraseña</label>\n                            <div class=\"input-group input-group-flat\">\n                                <input type=\"password\" name=\"password\" class=\"form-control\" required placeholder=\"Ingresa tu contraseña\"\n                                    #p=\"ngModel\" [(ngModel)]=\"user.password\" [ngClass]=\"{ 'is-invalid': f.submitted && p.invalid }\">\n                                <div class=\"invalid-feedback\" *ngIf=\"f.submitted && p.invalid\">\n                                    <div *ngIf=\"p.errors.required\">Requerido</div>\n                                </div>\n                            </div>\n                        </div>\n    \n                        <div class=\"mb-2\">\n                            <label class=\"form-label\">Confirmar contraseña</label>\n                            <div class=\"input-group input-group-flat\">\n                                <input type=\"password\" name=\"passConfirm\" class=\"form-control\" required placeholder=\"Confirma tu contraseña\"\n                                    #passConfirm=\"ngModel\" [(ngModel)]=\"passwordConfirm\" [ngClass]=\"{ 'is-invalid': f.submitted && passConfirm.invalid }\">\n                                <div class=\"invalid-feedback\" *ngIf=\"f.submitted && passConfirm.invalid\">\n                                    <div *ngIf=\"passConfirm.errors.required\">Requerido</div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"form-footer mt-4 mb-5\">\n                            <button type=\"submit\" class=\"btn btn-block btn-primary\" [disabled]=\"isValidating\">\n                                <span class=\"spinner-border spinner-border-sm mr-2\" role=\"status\" *ngIf=\"isValidating\"></span>\n                                <span *ngIf=\"!isValidating\">Resgistrarme</span>\n                                <span *ngIf=\"isValidating\">Validando...</span>\n                            </button>\n                        </div>\n                    </form>\n                    <p class=\"text-muted\">¿Ya tienes cuenta en TaskGems? <a href=\"#\" [routerLink]=\"['/login']\" class=\"text-primary\">Inicia Sesión</a></p>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n</div>\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { DataService } from './data.service';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SecurityService {\r\n\r\n  jwt: any;\r\n  pictureProfile: any;\r\n  constructor(\r\n    private http: HttpClient,\r\n    private dataService: DataService\r\n  ) {\r\n\r\n    this.jwt = new JwtHelperService();\r\n  }\r\n\r\n  private userChanges = new EventEmitter<any>();\r\n  public userChangePictureProfile = new EventEmitter<any>();\r\n  private currentUser: any;\r\n\r\n  login(credentials: any): Observable<any> {\r\n    return new Observable((observer) => {\r\n      this.http.post(environment.serverBaseURL + '/signin', credentials).subscribe(res => {\r\n        if (!res) {\r\n          observer.error();\r\n        } else {\r\n          if (res[\"user\"] && res[\"token\"]) {\r\n            this.userChanges.emit(res[\"user\"]);\r\n            this.currentUser = res['user'] as User;\r\n\r\n            localStorage.setItem('tokGem', `${res['token']}`);\r\n          }\r\n          observer.next(res);\r\n        }\r\n        observer.complete();\r\n\r\n      }, error => {\r\n        observer.error(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  signup(obj: any): Observable<any> {\r\n    return new Observable((observer) => {\r\n      this.http.post(environment.serverBaseURL + '/signup', obj).subscribe(res => {\r\n        if (!res) {\r\n          observer.error();\r\n        } else {\r\n          observer.next(res);\r\n        }\r\n        observer.complete();\r\n      }, error => {\r\n        observer.error(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  isTokenExpired() {\r\n    return this.jwt.isTokenExpired(this.getToken());\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return new Observable((observer) => {\r\n      this.currentUser = null;\r\n\r\n      localStorage.removeItem('tokGem');\r\n\r\n      this.userChanges.emit();\r\n      observer.next();\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n  getAccountId() {\r\n    return localStorage.getItem('accountId');\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('tokGem');\r\n  }\r\n\r\n  getCookie() {\r\n    return localStorage.getItem('cookie');\r\n  }\r\n\r\n  async getCurrentUser(): Promise<User> {\r\n    if (this.currentUser) {\r\n      return this.currentUser;\r\n    }\r\n\r\n    var obj = this.jwt.decodeToken(this.getToken());\r\n    \r\n    if (obj) {\r\n      let res = await this.dataService.findById('/users/index', obj.id ).toPromise();\r\n      this.currentUser = res['objs'] as User;\r\n      return this.currentUser;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  getUserChangesEmitter() {\r\n    return this.userChanges;\r\n  }\r\n\r\n  getUserChangePictureProfile() {\r\n    this.pictureProfile = localStorage.getItem('profilePicture');\r\n    return this.pictureProfile;\r\n  }\r\n\r\n  UserChangePictureProfile(picture) {\r\n    localStorage.setItem('profilePicture', picture);\r\n    return this.userChangePictureProfile.emit(picture);\r\n  }\r\n\r\n  getCurrentUserRoles() {\r\n\r\n    if (this.currentUser) {\r\n      return this.currentUser.role;\r\n    }\r\n \r\n    var obj = this.jwt.decodeToken(this.getToken());\r\n    if (obj && obj.role) {\r\n      return obj.role;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  hasPermisions(roles) {\r\n    let currentRoles = this.getCurrentUserRoles();\r\n\r\n    if (roles && currentRoles) {\r\n      return roles.some((role, index, x) => {\r\n        if (currentRoles.indexOf(role) > -1) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}","export const environment = {\n  production: false,\n  serverBaseURL: \"http://23.22.50.105\",\n};","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nimport { Board } from 'src/app/models/board.model';\nimport { User } from 'src/app/models/user.model';\nimport { DataService } from 'src/app/services/data.service';\nimport { ConfirmationService } from 'primeng/api';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  boards: Board[];\n  loading: boolean;\n  page: number = 0;\n  display: boolean = false;\n  newBoard: any = {project_name: \"\", description: \"\"};\n  selectedMembers: User[];\n  users: User[];\n  selectedProductOwner: User;\n  selectedScrumMaster: User;\n  selectedImage: string;\n\n  yearRange: string;\n  maxDate: Date;\n\n  constructor(\n    private data: DataService,\n    private toast: MessageService,\n    private confirmationService: ConfirmationService\n  ) { }\n\n  ngOnInit(): void {\n    this.onFindUsersBoards();\n    this.onFindUsers();\n    this.initCalendar();\n  }\n\n  onFindUsers() {\n    this.loading = true;\n    this.data.find('/users').subscribe(d => {\n      this.users = d.objs.docs.map(u => new User(u));\n      this.loading = false;\n    }, error => {\n      this.toast.add({ severity: 'error', summary: 'Error', detail: error });\n      this.loading = false;\n    });\n  }\n\n  onFindUsersBoards() {\n    this.loading = true;\n    this.data.find('/boards').subscribe(d => {\n      this.boards = d.objs.docs;\n      console.log(d);\n      this.loading = false;\n    }, error => {\n      console.log(error)\n      this.toast.add({ severity: 'error', summary: 'Error', detail: error });\n      this.loading = false;\n    });\n  }\n\n  onCreateBoard() {\n    const newBoardAux = {\n      _project_name: this.newBoard.project_name,\n      _project_start_date: new Date(),\n      _project_request_date: this.newBoard.start_date,\n      _description: this.newBoard.description,\n      _scrum_master: this.selectedScrumMaster.id,\n      _product_owner: this.selectedProductOwner.id,\n      _background_url: `/assets/img/backgrounds/bg-${this.selectedImage}`\n    }\n    this.data.insertOne('/boards', newBoardAux).subscribe(d => {\n      console.log(d);\n      this.boards.push(d['objs']);\n      this.selectedMembers.forEach(m => {\n        this.data.addToBoard(d['objs']._id, m.id).subscribe(d => {\n          console.log(d);\n        }, error => {\n          console.log(error);\n        })\n      });\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  onDeleteBoard(boardId: string) {\n\n  }\n\n  confirm(event: Event, boardId: string) {\n    event.stopPropagation();\n    this.confirmationService.confirm({\n        target: event.target,\n        message: `Seguro que quieres eliminar el tablero?`,\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n            this.onDeleteBoard(boardId);\n        },\n        reject: () => {\n            alert('Ok');\n        }\n    });\n  } \n\n  showDialog() {\n    this.display = true;\n  }\n\n  initCalendar() {\n    this.maxDate = new Date();\n    let year = this.maxDate.getFullYear();\n    let day = this.maxDate.getDate();\n    let month = this.maxDate.getMonth()+1;\n    this.yearRange = `${year + 10}-${month}-${day}`;\n  }\n\n  \n\n}\n","<div class=\"container ptb-30\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h4><i class=\"fa fa-heart mr-10\" aria-hidden=\"true\"></i>Favoritos</h4>\n            <div class=\"row\">\n                <div class=\"col-md-3\" *ngFor=\"let board of boards\">\n                    <div class=\"card board-card cursor-pointer\"  [routerLink]=\"['/board/', board._id]\">\n                        <img src=\"https://i.pinimg.com/originals/a7/fc/aa/a7fcaa43650adc892c401956a08dc32a.jpg\"\n                            class=\"card-img-top\" alt=\"...\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{ board._project_name }}</h5>\n                            <p class=\"card-text\">{{ board._description }}</p>\n                            <a href=\"javascript:void(0)\" (click)=\"confirm($event)\" class=\"primary-color\"><i class=\"fa fa-heart mr-10 cursor-pointer\" aria-hidden=\"true\"></i></a>\n                            <a href=\"javascript:void(0)\" (click)=\"confirm($event, board._id)\" class=\"red-color\"><i class=\"fa fa-trash mr-10 cursor-pointer\" aria-hidden=\"true\" ></i></a>\n                            <span><i class=\"fas fa-users mr-1\"></i>{{ board._members.length + 2 }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h4><i class=\"fa fa-user-circle mr-10 mt-30\" aria-hidden=\"true\"></i>Mis tableros</h4>\n            <div class=\"row\">\n                <div class=\"col-md-3\" *ngFor=\"let board of boards\">\n                    <div class=\"card board-card cursor-pointer\" [routerLink]=\"['/board/', board._id]\">\n                        <img src=\"https://i.pinimg.com/originals/a7/fc/aa/a7fcaa43650adc892c401956a08dc32a.jpg\"\n                            class=\"card-img-top\" alt=\"...\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">{{ board._project_name }}</h5>\n                            <p class=\"card-text\">{{ board._description }}</p>\n                            <a href=\"javascript:void(0)\" (click)=\"confirm($event)\" class=\"primary-color\"><i class=\"fa fa-heart mr-10 cursor-pointer\" aria-hidden=\"true\"></i></a>\n                            <a href=\"javascript:void(0)\" (click)=\"confirm($event)\" class=\"primary-color\"><i class=\"far fa-heart mr-10 cursor-pointer\" aria-hidden=\"true\"></i></a>\n                            <a href=\"javascript:void(0)\" (click)=\"confirm($event, board._id)\" class=\"red-color\"><i class=\"fa fa-trash mr-10 cursor-pointer\" aria-hidden=\"true\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"card board-card cursor-pointer\" (click)=\"showDialog()\">\n                        <div class=\"card-body mx-auto d-flex align-items-center\">\n                            <div >\n                                <img src=\"/assets/img/add-board.png\" alt=\"add board logo\" height=\"100\"  class=\" text-center\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n    </div>\n    <p-dialog header=\"Nuevo tablero\" [(visible)]=\"display\" styleClass=\"max-1000\" [resizable]=\"false\"\n        styleClass='pDialog' [draggable]=\"false\">\n        <div class=\"max-1000\">\n            <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onCreateBoard()\" novalidate>\n                <div class=\"mb-2\">\n                    <label class=\"form-label\" for=\"name\">Nombre</label>\n                    <input type=\"text\" name=\"name\" class=\"form-control\" required placeholder=\"Ej. Proyecto TaskGems\"\n                        #b=\"ngModel\" [(ngModel)]=\"newBoard.project_name\"\n                        [ngClass]=\"{ 'is-invalid': f.submitted && b.invalid }\">\n                    <div class=\"invalid-feedback\" *ngIf=\"f.submitted && b.invalid\">\n                        <div *ngIf=\"b.errors.required\">Requerido</div>\n                    </div>\n                </div>\n\n                <div class=\"mb-2\">\n                    <label class=\"form-label\">Descripcion</label>\n                    <div class=\"input-group input-group-flat\">\n                        <textarea type=\"\" name=\"password\" class=\"form-control\" id=\"password\" required #c=\"ngModel\"\n                            [(ngModel)]=\"newBoard.description\" [ngClass]=\"{ 'is-invalid': f.submitted && c.invalid }\">\n                            Descripcion del proyecto\n                            </textarea>\n                        <div class=\"invalid-feedback\" *ngIf=\"f.submitted && c.invalid\">\n                            <div *ngIf=\"c.errors.required\">Requerido</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"mb-2 col-md-6\">\n                        <label class=\"form-label\" for=\"birth\" class=\"\">Fecha de inicio</label>\n                        <input type=\"date\" class=\"form-control\" name=\"birth\" #birth=\"ngModel\" [(ngModel)]=\"newBoard.start_date\" min=\"1945-01-01\" [max]=\"yearRange\"\n                            required [ngClass]=\"{ 'is-invalid': f.submitted && birth.invalid }\">\n                        <div class=\"invalid-feedback\" *ngIf=\"f.submitted && birth.invalid\">\n                            <div *ngIf=\"birth.errors.required\">\n                                Fecha requerida\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mb-2 col-md-6\">\n                        <label for=\"scrumMaster\">Scrum Master</label>\n                        <div class=\"input-group input-group-flat\">\n                            <p-dropdown #d=\"ngModel\" [options]=\"users\" [(ngModel)]=\"selectedScrumMaster\"\n                                placeholder=\"Selecciona product owner\" optionLabel=\"firstName\" name=\"scrumMaster\"\n                                [showClear]=\"false\" [ngClass]=\"{ 'is-invalid': f.submitted && d.invalid }\" required>\n                            </p-dropdown>\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && d.invalid\">\n                                <div *ngIf=\"d.errors.required\">Requerido</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mb-2 col-md-6\">\n                        <label for=\"productOwner\">Product Owner</label>\n                        <div class=\"input-group input-group-flat\">\n                            <p-dropdown #e=\"ngModel\" [options]=\"users\" [(ngModel)]=\"selectedProductOwner\"\n                                placeholder=\"Selecciona product owner\" optionLabel=\"firstName\" name=\"productOwner\"\n                                [showClear]=\"false\" [ngClass]=\"{ 'is-invalid': f.submitted && e.invalid }\" required>\n                            </p-dropdown>\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && e.invalid\">\n                                <div *ngIf=\"e.errors.required\">Requerido</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"mb-2 col-md-6\">\n                        <label class=\"form-label\" for=\"selectedMembers\">Miembros participantes</label>\n                        <div class=\"input-group input-group-flat\">\n                            <p-multiSelect #a=\"ngModel\" [options]=\"users\" [(ngModel)]=\"selectedMembers\"\n                                optionLabel=\"firstName\" filterBy=\"firstName\" placeholder=\"Selecciona los miembros\"\n                                [ngClass]=\"{ 'is-invalid': f.submitted && a.invalid }\" name=\"selectedMembers\">\n                                <ng-template pTemplate=\"selectedItem\">\n                                    <div class=\"country-item country-item-value\" *ngIf=\"selectedMembers\">\n                                        <div>{{selectedMembers.firstName}}</div>\n                                    </div>\n                                </ng-template>\n                                <ng-template let-user pTemplate=\"item\">\n                                    <div class=\"country-item\">\n                                        <div>{{user.firstName}}</div>\n                                    </div>\n                                </ng-template>\n                            </p-multiSelect>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"mb-2\">\n                    <label for=\"\">Selecciona una imagen de fondo</label>\n                    <ul class=\"ul-image-picker\">\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb1\" name=\"image-picker\" value=\"1\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb1\"><img\n                                    src=\"https://picsum.photos/seed/1/100\" height=\"100\" width=\"100\" /></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb2\" name=\"image-picker\" value=\"2\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb2\"><img\n                                    src=\"https://picsum.photos/seed/2/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb3\" name=\"image-picker\" value=\"3\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb3\"><img\n                                    src=\"https://picsum.photos/seed/3/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb4\" name=\"image-picker\" value=\"4\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb4\"><img\n                                    src=\"https://picsum.photos/seed/4/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb5\" name=\"image-picker\" value=\"5\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb5\"><img\n                                    src=\"https://picsum.photos/seed/1/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb6\" name=\"image-picker\" value=\"6\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb6\"><img\n                                    src=\"https://picsum.photos/seed/2/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb7\" name=\"image-picker\" value=\"7\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb7\"><img\n                                    src=\"https://picsum.photos/seed/3/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb8\" name=\"image-picker\" value=\"8\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb8\"><img\n                                    src=\"https://picsum.photos/seed/4/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb9\" name=\"image-picker\" value=\"9\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb9\"><img\n                                    src=\"https://picsum.photos/seed/4/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb10\" name=\"image-picker\" value=\"10\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb10\"><img\n                                    src=\"https://picsum.photos/seed/4/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                        <li class=\"li-image-picker\"><input type=\"radio\" id=\"cb11\" name=\"image-picker\" value=\"11\"\n                                [(ngModel)]=\"selectedImage\" />\n                            <label class=\"label-image-picker\" for=\"cb11\"><img\n                                    src=\"https://picsum.photos/seed/4/100\" height=\"100\" width=\"100\"/></label>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class=\"form-footer mt-4 mb-5\">\n                    <button type=\"submit\" class=\"btn btn-block btn-primary\" [disabled]=\"loading\">\n                        <span class=\"spinner-border spinner-border-sm mr-2\" role=\"status\" *ngIf=\"loading\"></span>\n                        <span *ngIf=\"!loading\" (click)=\"onCreateBoard()\">Crear</span>\n                        <span *ngIf=\"loading\">Creando...</span>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </p-dialog>\n</div>\n\n<p-confirmPopup></p-confirmPopup>\n","export const abilitiesList = [\n    {language: 'Javascript Élite', value: {language: 'Javascript', level: 'Elite'}},\n    {language: 'Javascript Senior', value: {language: 'Javascript', level: 'Senior'}},\n    {language: 'Javascript Junior', value: {language: 'Javascript', level: 'Junior'}},\n    {language: 'C++ Élite', value: {language: 'C++', level: 'Elite'}},\n    {language: 'C++ Senior', value: {language: 'C++', level: 'Senior'}},\n    {language: 'C++ Junior', value: {language: 'C++', level: 'Junior'}},\n    {language: 'Dart Élite', value: {language: 'Dart', level: 'Elite'}},\n    {language: 'Dart Senior', value: {language: 'Dart', level: 'Senior'}},\n    {language: 'Dart Junior', value: {language: 'Dart', level: 'Junior'}},\n]; ","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class DataService {\n\n  refreshTransformers:  EventEmitter<any> = new EventEmitter();\n  isMenuCollapsed: boolean = false;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  find(collection: String) {\n    return this.http.get<any>(environment.serverBaseURL + collection + \"/\");\n  }\n\n  findByParams(collection: String, params: String) {\n    return this.http.get<any>(environment.serverBaseURL + collection + \"?\" + params);\n  }\n  \n  findByFilter(collection: String, params: any) {\n    return this.http.post<any>(environment.serverBaseURL + collection + \"?\", params);\n  }\n\n  findBy(collection: String, query: URLSearchParams) {\n    return this.http.get<any>(environment.serverBaseURL + collection + \"?\" + query);\n  }\n\n  findById(collection: String, id: String) {\n    return this.http.get<any>(environment.serverBaseURL + collection + \"/\" + id);\n  }\n\n  insertOne(collection: String, obj: any) {\n    return this.http.post(environment.serverBaseURL + collection + \"/\", obj);\n  }\n\n  insertMany(collection: String, list: Array<any>) {\n    return this.http.post(environment.serverBaseURL + collection + \"/\", list);\n  }\n\n  updateOne(collection: String, obj: any) {\n    return this.http.put(environment.serverBaseURL + collection + \"/\", obj);\n  }\n\n  updateMany(collection: String, obj: String) {\n    return this.http.put(environment.serverBaseURL + collection + \"/\", obj);\n  }\n\n  deleteOne(collection: String, id: String) {\n    return this.http.delete(environment.serverBaseURL + collection + \"/\" + id);\n  }\n\n  insertOneFile(collection, fileToUpload: File) {\n    const formData: FormData = new FormData();\n    formData.append('file', fileToUpload, fileToUpload.name);\n    return this.http.post(environment.serverBaseURL + collection + \"/\", formData);\n  }\n\n  count(collection: String) {\n    return this.http.get<any>(environment.serverBaseURL + collection + \"/\");\n  }\n\n  countWithParams(collection: String, params: String) {\n    return this.http.get<any>(environment.serverBaseURL + collection + \"?\" + params);\n  }\n\n  addToBoard(boardId: String, userId: String) {\n    return this.http.post<any>(environment.serverBaseURL + `/boards/add-to-board/${boardId}/${userId}`, {});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clean',\n  templateUrl: './clean.component.html',\n})\nexport class CleanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page\">\n    <router-outlet></router-outlet>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SecurityService } from '../services/security.service';\n\n\n@Injectable({ providedIn: 'root' })\nexport class SecurityGuard implements CanActivate {\n\n  constructor(\n    private securityService: SecurityService,\n    private router: Router,\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(!this.securityService.getToken()) {\n      this.router.navigateByUrl('/login');\n      return false;\n    }\n    return true; \n  }\n}\n","export class Address { \n    street: String;\n    number: String;\n\n    public constructor() { }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent { }\n","import { Address } from './address.model';\nimport { BaseModel } from './base.model';\n\nexport class User extends BaseModel {\n\n    email: string;\n    firstName: String;\n    lastName: String;\n    birthday: Date;\n    curp: String;\n    rfc: String;\n    address: Address = new Address();\n    abilities: any;\n    password: String;\n\n    public constructor(mongoUser?: any) { \n        super(mongoUser?._id, mongoUser?._updatedAt, mongoUser?._createdAt);\n        if(mongoUser) {\n            this.email = mongoUser?._email\n            this.firstName = mongoUser?._first_name;\n            this.lastName = mongoUser?._last_name;\n            this.birthday = mongoUser?._birthday;\n            this.curp = mongoUser?._birthday;\n            this.rfc = mongoUser?._rfc;\n            this.address = mongoUser?._address;\n            this.abilities = mongoUser?._abilities;\n            this.password = mongoUser?._password;\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SecurityService } from '../../services/security.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: String;\n  password: String;\n  isLogin: Boolean = false;\n\n  constructor(\n    private securityService: SecurityService,\n    private router: Router,\n    private toast: MessageService,\n  ) { }\n\n  ngOnInit(): void { }\n\n  onLogin():void {\n    console.log('[LoginComponent][onLogin]');\n    this.isLogin = true;\n\n    this.securityService.login({\n      email: this.email,\n      password: this.password\n    }).subscribe((res) => {\n      this.isLogin = false;\n      this.router.navigate(['/home']);\n    }, (error) => {\n      this.toast.add({ severity: 'error', summary: 'Error', detail: error.error.message });\n      this.isLogin = false;\n    });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row min-vh-100\">\n        <div class=\"col-6 black-column\">\n            <div class=\"row mx-auto h-100\">\n                <div class=\"d-flex my-auto mx-auto\">\n                    <img src=\"../../../assets/icons/gem-v2.png\" alt=\"Vectorized image\" class=\"logo-img\">\n                </div>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"row mx-auto h-100\">\n                <div class=\"col-8 mx-auto my-auto\">\n                    <h1>Iniciar <span class=\"text-primary\">Sesión</span></h1>\n                    <div>\n                        <p class=\"text-muted\">Ingresa tus datos para iniciar sesion en tu cuenta de TaskGems</p>\n                    </div>\n                    <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onLogin()\" novalidate>\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\" for=\"name\">Correo Electronico</label>\n                            <input type=\"email\" name=\"name\" class=\"form-control\" required email placeholder=\"Ej. adapt@gmail.com\"\n                                #e=\"ngModel\" [(ngModel)]=\"email\" [ngClass]=\"{ 'is-invalid': f.submitted && e.invalid }\">\n                            <div class=\"invalid-feedback\" *ngIf=\"f.submitted && e.invalid\">\n                                <div *ngIf=\"e.errors.required\">Requerido</div>\n                                <div *ngIf=\"e.errors.email\">Debe ser un correo válido</div>\n                            </div>\n                            <small id=\"emailHelp\" class=\"form-text text-muted\">No compartas tu cuenta con nadie mas.</small>\n                        </div>\n\n                        <div class=\"mb-2\">\n                            <label class=\"form-label\">Contraseña</label>\n                            <div class=\"input-group input-group-flat\">\n                                <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" required placeholder=\"Ingresar constraseña\"\n                                    #p=\"ngModel\" [(ngModel)]=\"password\" [ngClass]=\"{ 'is-invalid': f.submitted && p.invalid }\">\n                                <div class=\"invalid-feedback\" *ngIf=\"f.submitted && p.invalid\">\n                                    <div *ngIf=\"p.errors.required\">Requerido</div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-footer mt-4 mb-5\">\n                            <button type=\"submit\" class=\"btn btn-block btn-primary\" [disabled]=\"isLogin\">\n                                <span class=\"spinner-border spinner-border-sm mr-2\" role=\"status\" *ngIf=\"isLogin\"></span>\n                                <span *ngIf=\"!isLogin\">Iniciar Sesión</span>\n                                <span *ngIf=\"isLogin\">Validando...</span>\n                            </button>\n                        </div>\n                    </form>\n                    <p class=\"text-muted\">¿No tienes cuenta en TaskGems? <a href=\"#\" [routerLink]=\"['/signup']\" class=\"text-primary\">Registrate</a></p>\n                </div>     \n            </div>\n        </div>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\nimport { SecurityGuard } from \"./services/security.guard\";\nimport { TokenInterceptor } from \"./services/token.interceptor\";\nimport { CleanComponent } from './layout/clean/clean.component';\nimport { MainComponent } from './layout/main/main.component';\nimport { HeaderComponent } from './layout/main/header/header.component';\nimport { MenuComponent } from './layout/main/menu/menu.component';\nimport { FooterComponent } from './layout/main/footer/footer.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\nimport { ToastModule } from \"primeng/toast\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { MessageService, ConfirmationService } from \"primeng/api\";\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { BoardComponent } from './components/board/board.component';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CleanComponent,\n    MainComponent,\n    HeaderComponent,\n    MenuComponent,\n    FooterComponent,\n    LandingComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    BoardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    ConfirmPopupModule,\n    HttpClientModule,\n    CalendarModule,\n    DialogModule,\n    DropdownModule,\n    ToastModule,\n    MultiSelectModule,\n  ],\n  providers: [\n    SecurityGuard,\n    MessageService,\n    ConfirmationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html'\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page\">\n    <app-header></app-header>\n    <app-menu></app-menu>\n\n    <div class=\"content\">\n        <router-outlet></router-outlet>\n    </div>\n    <!--<app-footer></app-footer>-->\n</div>","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SecurityService } from './security.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private securityService: SecurityService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if(request.url && request.url.indexOf(\"cloudinary\")== -1){\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.securityService.getToken()}`,\n        }\n      });\n\n      if (request.method === 'GET') {\n        request = request.clone({\n          setHeaders: {\n            'Cache-Control': 'no-cache',\n            'Pragma': 'no-cache'\n          }\n        })\n      }\n    }\n\n    \n    return next.handle(request);\n  }\n}\n","import { BaseModel } from './base.model';\n\nexport class Board extends BaseModel {\n\n    project_name: string;\n    description: string;\n    project_request_date: Date;\n    project_start_date: Date;\n    scrum_master: string;\n    product_owner: string;\n    members: string[];\n    backgroundUrl: string;\n\n    constructor(mongoBoard?: any) {\n        console.log(mongoBoard);\n        super(mongoBoard?._id, mongoBoard?._updatedAt, mongoBoard?._createdAt);\n        if(mongoBoard) {\n            this.project_name = mongoBoard?._project_name;\n            this.project_request_date = mongoBoard?._project_request_date;\n            this.project_start_date = mongoBoard?._project_start_date;\n            this.description = mongoBoard?._description;\n            this.scrum_master = mongoBoard?._scrum_master;\n            this.product_owner = mongoBoard?._product_owner;\n            this.members = mongoBoard?._members;\n            this.backgroundUrl = mongoBoard?._background_url;\n        }\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../../services/data.service';\nimport { Router } from '@angular/router';\nimport { SecurityService } from \"../../../services/security.service\";\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  currentUser: any={};\n\n  constructor(\n    public securityService: SecurityService,\n    public data: DataService,\n    private router: Router,\n    private translateService: TranslateService\n  ) {\n      this.translateService.setDefaultLang(this.selectedLanguage);\n      this.translateService.use(this.selectedLanguage);\n  }\n\n  async ngOnInit() {\n    this.currentUser = await this.securityService.getCurrentUser();\n  }\n\n  onLogout() {\n    this.securityService.logout().subscribe(() =>{\n      this.router.navigate(['/login']);\n    });\n  }\n\n  selectedLanguage = 'es';\n  selectLanguage(lang: string) {\n      this.translateService.use(lang);\n  }\n  \n}\n","<!--Navbar -->\n<nav class=\"mb-1 navbar navbar-expand-lg navbar-dark default-color py-0 py-md-0\">\n    <a class=\"navbar-brand\" href=\"#\">\n        <img src=\"/assets/icons/gem-v1.png\" alt=\"Tabler\" class=\"d-inline-block align-top cursor-pointer\" height=\"30\">\n        TaskGems\n    </a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent-333\">\n        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\n            <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle navbar-right\" id=\"navbarDropdownMenuLink-333\" data-toggle=\"dropdown\"\n                aria-haspopup=\"true\" aria-expanded=\"false\">\n                <i class=\"fas fa-user\"></i>\n                <span class=\"pl-10 cursor-pointer\">{{currentUser._first_name}}</span>\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-lg-right dropdown-secondary\"\n                    aria-labelledby=\"navbarDropdownMenuLink-55\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/home']\" (click)=\"onLogout()\">\n                        <i class=\"fas fa-user-alt mr-2\"></i>\n                        Perfil\n                    </a>\n                    <a class=\"dropdown-item text-danger cursor-pointer\" (click)=\"onLogout()\">\n                        <i class=\"fas fa-sign-out-alt mr-2\"></i>\n                        Cerrar Sesión\n                    </a>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>\n<!--/.Navbar -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataService } from 'src/app/services/data.service';\nimport { MessageService } from 'primeng/api';\nimport { User } from 'src/app/models/user.model';\nimport { Board } from 'src/app/models/board.model';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  board: Board;\n  \n  boardId: String;\n  isLoading: boolean = false;\n  display: boolean = false;\n  selectedUsers: User[];\n  users: User[];\n\n  constructor(\n    private data: DataService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toast: MessageService\n  ) { }\n\n  ngOnInit(): void {\n    this.boardId = this.route.snapshot.paramMap.get(\"id\");\n    this.onFindBoard();\n  }\n\n  onFindBoard() {\n    console.log('[BoardComponent][onFindBoard]');\n    this.isLoading = true;\n    this.data.findById('/boards/index', this.boardId).subscribe((res) => {\n      let mongoBoard = res.objs;\n      this.board = new Board(mongoBoard);\n      this.isLoading = false;\n    }, (error) => {\n      this.toast.add({ severity: 'error', summary: 'Error', detail: error.error.message });\n      this.isLoading = false;\n    });\n  }\n\n  showDialog() {\n    this.display = true;\n  }\n\n  onAddUser() {\n    alert('hello');\n  }\n}\n","<p-dialog header=\"Agregar miembro\" [(visible)]=\"display\" styleClass=\"max-1000\" [resizable]=\"false\"\n    styleClass='pDialog' [draggable]=\"false\">\n\n    <div class=\"max-1000\">\n        <form name=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onAddUser()\" novalidate>\n            <div class=\"row\">\n                <div class=\"mb-2 col-md-6\">\n                    <label class=\"form-label\" for=\"selectedMembers\">Usuarios</label>\n                    <div class=\"input-group input-group-flat\">\n                        <p-multiSelect #selectedMembers=\"ngModel\" [options]=\"users\" [(ngModel)]=\"selectedUsers\"\n                            optionLabel=\"firstName\" filterBy=\"firstName\" placeholder=\"Agrega a los miembros\"\n                            [ngClass]=\"{ 'is-invalid': f.submitted && selectedMembers.invalid }\" required name=\"selectedMembers\">\n                            <ng-template pTemplate=\"selectedItem\">\n                                <div class=\"country-item country-item-value\" *ngIf=\"selectedUsers\">\n                                    <div>{{selectedUsers.firstName}}</div>\n                                </div>\n                            </ng-template>\n                            <ng-template let-user pTemplate=\"item\">\n                                <div class=\"country-item\">\n                                    <div>{{user.firstName}}</div>\n                                </div>\n                            </ng-template>\n                        </p-multiSelect>\n                        <div class=\"invalid-feedback\" *ngIf=\"f.submitted && selectedMembers.invalid\">\n                            <div *ngIf=\"selectedMembers.errors.required\">Requerido</div>\n                        </div>\n                    </div>\n                </div>\n            </div>     \n        </form>\n    </div>  \n</p-dialog>\n\n<div class=\"card\" role=\"alert\" *ngIf=\"isLoading\">\n    <div class=\" card-body\">\n      <span class=\"spinner-border spinner-border-sm mr-2\" role=\"status\"></span>\n      Cargando registro\n    </div>\n</div>\n\n<nav class=\"navbar navbar-expand-lg fixed-bottom navbar-dark bg-dark py-0 py-md-0\" *ngIf=\"!isLoading\">\n    <h2 class=\"text-success mr-10 my-auto\">{{board.project_name}}</h2>\n    <button class=\"btn btn-sm btn-outline-success\" type=\"button\"\n        (click)=\"showDialog()\">Invitar</button>\n    <span class=\"navbar-text d-flex ml-auto p-2\">\n        {{ board.description }}\n    </span>\n</nav>","export class BaseModel {\n  id: string;\n  updatedAt: Date;\n  createdAt: Date;\n\n  constructor(_id?: any, _updatedAt?: any, _createdAt?: any) {\n    this.id = _id;\n    this.updatedAt = _updatedAt;\n    this.createdAt = _createdAt;\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { CleanComponent } from './layout/clean/clean.component';\nimport { SignupComponent } from './components/signup/signup.component'\nimport { HomeComponent } from './components/home/home.component';\nimport { BoardComponent } from './components/board/board.component';\nimport { MainComponent } from './layout/main/main.component';\nimport { SecurityGuard } from \"./services/security.guard\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"home\", pathMatch: \"full\" },\n  {\n    path: \"\",\n    component: CleanComponent,\n    children: [\n      { path: \"\", component: LandingComponent },\n      { path: \"login\", component: LoginComponent },\n      { path: \"signup\", component: SignupComponent },\n    ],\n  },\n  {\n    path: \"\", component: MainComponent, \n    children: [\n      { path: \"home\",  component: HomeComponent, canActivate: [SecurityGuard] },\n      { path: \"board/:id\",  component: BoardComponent, canActivate: [SecurityGuard] }\n    ]\n  },\n  { path: '**', redirectTo: \"\", pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}